{"version":3,"sources":["utils/infura.js","abi/TokenAbi.js","abi/UniswapAbi.js","utils/decode.js","utils/scanner.js","hooks/useScanner.ts","components/Swap.tsx","components/TableData.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["web3","undefined","window","ethereum","Web3","ABI","abiDecoder","addABI","TokenAbi","UniswapAbi","scanTransactionCallback","wallets","txn","block","onFoundTx","includes","to","toLowerCase","from","utils","fromWei","value","inputDecode","decodeMethod","input","name","params","address","filter","e","amountIn","amountInValue","addressIn","amountOut","amountOutValue","addressOut","length","contract","eth","Contract","methods","symbol","call","then","symbolIn","decimals","decimalsIn","parseInt","nameTokenIn","nameTokenOut","symbolOut","decimalsOut","getBlock","blockNumber","timestamp","timeStampString","format","scanBlockRange","startingBlock","stoppingBlock","onProgress","finishCallback","nt","gotError","numThreads","startTime","Date","exitThread","numBlocksScanned","duration","getTime","blocksPerSec","Math","floor","asyncScanNextBlock","myBlockNumber","pctDone","bn","t","n","getPercentComplete","error","console","transactions","i","scanBlockCallback","useScanner","useState","scanning","setScanning","progress","setProgress","currentBlock","setCurrentBlock","result","setResult","latestResult","useLatest","latestCurrentBlock","tx","filterDuplicate","current","v","a","findIndex","hash","useEffect","onFinish","stopBlock","getBlockNumber","ms","Promise","resolve","setTimeout","map","Swap","props","record","size","color","href","target","rel","blockHash","arePropsAreEqual","prevProps","nextProps","MemoizedSwap","React","memo","TableData","state","searchText","searchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","onChange","onPressEnter","handleSearch","width","marginBottom","display","type","onClick","icon","SearchOutlined","handleReset","closeDropdown","setState","filterIcon","filtered","onFilter","Object","keys","toString","onFilterDropdownVisibleChange","visible","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","columns","title","key","this","dataSource","Component","App","className","percent","status","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f5bba9f.chunk.js","sourcesContent":["import Web3 from 'web3';\n\nlet web3:any ;\n// eslint-disable-next-line no-undef\nif (window.ethereum !== undefined) {\n  // eslint-disable-next-line no-undef\n  web3 = new Web3(ethereum);\n}\n\nasync function test() {\n\n    // var subscription = web3.eth.subscribe('logs', {\n    //     address: '0x7Ed2cde6441191169fbD9a40e305727F61925174',\n    // }, function(error, result){\n    //     if (!error)\n    //         console.log(result);\n    // })\n    // .on(\"connected\", function(subscriptionId){\n    //     console.log(\"connected\")\n    //     console.log(subscriptionId);\n    // })\n    // .on(\"data\", function(log){\n    //     console.log(\"data\")\n    //     console.log(log);\n    // })\n    // .on(\"changed\", function(log){\n    //     console.log(\"changed\")\n    //     console.log(log)\n    // });\n\n// web3.eth.getTransaction('0xd46f0d9b9478396624f865a8eec10df44003fd0fb9635f13c1c073737317e3e2')\n// .then((r)=>{\n//   const decodedData = abiDecoder.decodeMethod(r.input);\n//   console.log(decodedData)\n// });\n}\nexport default web3;"," const ABI = [\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"_spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [\n        {\n          \"name\": \"success\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"_from\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"_to\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [\n        {\n          \"name\": \"success\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"decimals\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"version\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"_owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"name\": \"balance\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"_to\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transfer\",\n      \"outputs\": [\n        {\n          \"name\": \"success\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"_spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"name\": \"_extraData\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"approveAndCall\",\n      \"outputs\": [\n        {\n          \"name\": \"success\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"_owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"name\": \"_spender\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"allowance\",\n      \"outputs\": [\n        {\n          \"name\": \"remaining\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"name\": \"_initialAmount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"name\": \"_tokenName\",\n          \"type\": \"string\"\n        },\n        {\n          \"name\": \"_decimalUnits\",\n          \"type\": \"uint8\"\n        },\n        {\n          \"name\": \"_tokenSymbol\",\n          \"type\": \"string\"\n        }\n      ],\n      \"type\": \"constructor\"\n    },\n    {\n      \"payable\": false,\n      \"type\": \"fallback\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"_from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"_to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"name\": \"_owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"name\": \"_spender\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n  ]\n  export default ABI","const ABI = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_factory\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"_WETH\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"WETH\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"tokenA\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"tokenB\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountADesired\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountBDesired\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountAMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountBMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deadline\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addLiquidity\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountA\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountB\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"liquidity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"token\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountTokenDesired\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountTokenMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountETHMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deadline\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"addLiquidityETH\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountToken\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountETH\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"liquidity\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"factory\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountOut\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"reserveIn\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"reserveOut\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getAmountIn\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountIn\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountIn\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"reserveIn\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"reserveOut\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getAmountOut\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountOut\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountOut\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"path\",\n          \"type\": \"address[]\"\n        }\n      ],\n      \"name\": \"getAmountsIn\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"amounts\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountIn\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"path\",\n          \"type\": \"address[]\"\n        }\n      ],\n      \"name\": \"getAmountsOut\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"amounts\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountA\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"reserveA\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"reserveB\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"quote\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountB\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"pure\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"tokenA\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"tokenB\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"liquidity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountAMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountBMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deadline\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeLiquidity\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountA\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountB\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"token\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"liquidity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountTokenMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountETHMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deadline\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"removeLiquidityETH\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountToken\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountETH\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"token\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"liquidity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountTokenMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountETHMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deadline\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approveMax\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"uint8\",\n          \"name\": \"v\",\n          \"type\": \"uint8\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"r\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"s\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"removeLiquidityETHWithPermit\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountToken\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountETH\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"tokenA\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"tokenB\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"liquidity\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountAMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountBMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deadline\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approveMax\",\n          \"type\": \"bool\"\n        },\n        {\n          \"internalType\": \"uint8\",\n          \"name\": \"v\",\n          \"type\": \"uint8\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"r\",\n          \"type\": \"bytes32\"\n        },\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"s\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"name\": \"removeLiquidityWithPermit\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountA\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountB\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountOut\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"path\",\n          \"type\": \"address[]\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deadline\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"swapETHForExactTokens\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"amounts\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountOutMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"path\",\n          \"type\": \"address[]\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deadline\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"swapExactETHForTokens\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"amounts\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountIn\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountOutMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"path\",\n          \"type\": \"address[]\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deadline\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"swapExactTokensForETH\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"amounts\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountIn\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountOutMin\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"path\",\n          \"type\": \"address[]\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deadline\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"swapExactTokensForTokens\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"amounts\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountOut\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountInMax\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"path\",\n          \"type\": \"address[]\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deadline\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"swapTokensForExactETH\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"amounts\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountOut\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amountInMax\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"path\",\n          \"type\": \"address[]\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"deadline\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"swapTokensForExactTokens\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"amounts\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"stateMutability\": \"payable\",\n      \"type\": \"receive\"\n    }\n  ]\n  export default ABI","import abiDecoder  from 'abi-decoder';\nimport TokenAbi from '../abi/TokenAbi';\nimport UniswapAbi from '../abi/UniswapAbi';\nabiDecoder.addABI(TokenAbi);\nabiDecoder.addABI(UniswapAbi);\nexport default abiDecoder","\nimport web3 from './infura'\nimport abiDecoder from './decode'\nimport TokenAbi from '../abi/TokenAbi';\nimport { format } from 'date-fns'\n// const wallet = '0x7Ed2cde6441191169fbD9a40e305727F61925174'; // change this to your Ethereum account number\n\nconst maxThreads = 200;\n\nfunction scanTransactionCallback(wallets,txn, block,onFoundTx) {\n\n//    console.log(JSON.stringify(block, null, 4));\n//    console.log(JSON.stringify(txn, null, 4));\n    // console.log(txn.to)\n    // console.log(txn.from)\n    if (wallets.includes(txn?.to?.toLowerCase())||wallets.includes(txn?.from?.toLowerCase())) {\n\n        // A transaction credited ether into this wallet\n        var ether = web3.utils.fromWei(txn.value, 'ether');\n        // console.log(`\\r${txn.hash} +${ether} from ${txn.from}`);\n        const inputDecode = abiDecoder.decodeMethod(txn.input)\n        if(inputDecode && inputDecode.name.includes('swap')){\n            txn.inputDecode = inputDecode\n            const {params} = inputDecode ||{}\n            const address = params?.filter(e=>{\n                return e.name==='path'\n            })?.[0]||0\n            //input\n            const amountIn = params?.filter(e=>{\n                return e.name==='amountIn'\n            })?.[0]||{}\n        \n            const amountInValue = amountIn?.value||txn?.value ||0\n            const addressIn = address?.value?.[0]||{}\n\n            //output\n            const amountOut  = params?.filter(e=>{\n                return e.name==='amountOutMin' ||e.name==='amountOut'\n            })?.[0]||{}\n            const amountOutValue = amountOut?.value||0\n            const addressOut = address?.value?.[address?.value?.length-1]||{}\n      \n            txn.addressIn = addressIn\n            txn.amountInValue = amountInValue\n\n            txn.addressOut = addressOut\n            txn.amountOutValue = amountOutValue\n            const contract =  new web3.eth.Contract(TokenAbi, addressIn)\n            contract.methods.symbol().call().then(symbol=>{\n                txn.symbolIn = symbol\n                contract.methods.decimals().call().then(decimals=>{\n                    txn.decimalsIn = parseInt(decimals)\n                    contract.methods.name().call().then(name=>{\n                        txn.nameTokenIn = name\n                        const contract =  new web3.eth.Contract(TokenAbi, addressOut)\n                        contract.methods.name().call().then(name=>{\n                            txn.nameTokenOut = name\n                            contract.methods.symbol().call().then(symbol=>{\n                                txn.symbolOut = symbol\n                                contract.methods.decimals().call().then(decimals=>{\n                                    txn.decimalsOut = parseInt(decimals)\n                                    web3.eth.getBlock(txn.blockNumber).then(block=>{\n                                        txn.timestamp = block.timestamp\n                                        txn.timeStampString = format(txn.timestamp*1000, 'HH:mm:ss MM/dd/yyyy')\n                                        onFoundTx(txn)\n                                    })\n                                })\n                            })\n                        })\n                    })\n                })\n            })\n        }\n        \n    } \n    // else if (wallets.includes(txn.from)) {\n\n    //     // A transaction debitted ether from this wallet\n    //     var ether = web3.utils.fromWei(txn.value, 'ether');\n    //     console.log(`\\r${block.timestamp} -${ether} to ${txn.to}`);\n    //     const inputDecode = abiDecoder.decodeMethod(txn.input)\n    //     if(inputDecode && inputDecode.name.includes('swap')){\n    //         txn.inputDecode = inputDecode\n    //         const {params} = inputDecode ||{}\n    //         const address = params?.filter(e=>{\n    //             return e.name==='path'\n    //         })?.[0]||0\n    //         //input\n    //         const amountIn = params?.filter(e=>{\n    //             return e.name==='amountIn'\n    //         })?.[0]||{}\n        \n    //         const amountInValue = amountIn?.value||txn?.value ||0\n    //         const addressIn = address?.value?.[0]||{}\n\n    //         //output\n    //         const amountOut  = params?.filter(e=>{\n    //             return e.name==='amountOutMin' ||e.name==='amountOut'\n    //         })?.[0]||{}\n    //         const amountOutValue = amountOut?.value||0\n    //         const addressOut = address?.value?.[address?.value?.length-1]||{}\n      \n    //         txn.addressIn = addressIn\n    //         txn.amountInValue = amountInValue\n\n    //         txn.amountOut = amountOut\n    //         txn.amountOutValue = amountOutValue\n    //         const contract =  new web3.eth.Contract(TokenAbi, addressIn)\n    //         contract.methods.symbol().call().then(symbol=>{\n    //             txn.symbolIn = symbol\n    //             contract.methods.decimals().call().then(decimals=>{\n    //                 txn.decimalsIn = parseInt(decimals)\n    //                 const contract =  new web3.eth.Contract(TokenAbi, addressOut)\n    //                 contract.methods.symbol().call().then(symbol=>{\n    //                     txn.symbolOut = symbol\n    //                     contract.methods.decimals().call().then(decimals=>{\n    //                         txn.decimalsOut = parseInt(decimals)\n    //                         web3.eth.getBlock(txn.blockNumber).then(block=>{\n    //                             txn.timestamp = block.timestamp\n    //                             txn.timeStampString = format(txn.timestamp, 'hh:mm MM/dd/yyyy')\n    //                             onFoundTx(txn)\n    //                         })\n    //                     })\n    //                 })\n    //             })\n    //         })\n    //     }\n    // }\n}\n\n\nfunction scanBlockCallback(wallets,block,onFoundTx) {\n\n    if (block.transactions) {\n        for (var i = 0; i < block.transactions.length; i++) {\n            var txn = block.transactions[i];\n            scanTransactionCallback(wallets,txn, block,onFoundTx);\n        }\n    }\n}\n\n\nexport function scanBlockRange(wallets,startingBlock, stoppingBlock, onFoundTx,onProgress, finishCallback) {\n\n    // If they didn't provide an explicit stopping block, then read\n    // ALL of the blocks up to the current one.\n\n    if (typeof stoppingBlock === 'undefined') {\n        stoppingBlock = web3.eth.blockNumber;\n    }\n\n    // If they asked for a starting block that's after the stopping block,\n    // that is an error (or they're waiting for more blocks to appear,\n    // which hasn't yet happened).\n\n    if (startingBlock > stoppingBlock) {\n        return -1;\n    }\n\n    let blockNumber = startingBlock,\n        gotError = false,\n        numThreads = 0,\n        startTime = new Date();\n\n    function getPercentComplete(bn) {\n        var t = stoppingBlock - startingBlock,\n            n = bn - startingBlock;\n        return Math.floor(n / t * 100, 2);\n    }\n\n    function exitThread() {\n        if (--numThreads == 0) {\n            var numBlocksScanned = 1 + stoppingBlock - startingBlock,\n                stopTime = new Date(),\n                duration = (stopTime.getTime() - startTime.getTime())/1000,\n                blocksPerSec = Math.floor(numBlocksScanned / duration, 2),\n                msg = `Scanned to block ${stoppingBlock} (${numBlocksScanned} in ${duration} seconds; ${blocksPerSec} blocks/sec).`\n                // numSpaces = process.stdout.columns - len,\n                // spaces = Array(1+numSpaces).join(\" \");\n\n                // console.log(\"\\r\"+msg+\"\\n\");\n            if (finishCallback) {\n                finishCallback(gotError, stoppingBlock);\n            }\n        }\n        return numThreads;\n    }\n\n    function asyncScanNextBlock() {\n\n        // If we've encountered an error, stop scanning blocks\n        if (gotError) {\n            return exitThread();\n        }\n\n        // If we've reached the end, don't scan more blocks\n        if (blockNumber > stoppingBlock) {\n            return exitThread();\n        }\n\n        // Scan the next block and assign a callback to scan even more\n        // once that is done.\n        var myBlockNumber = blockNumber++;\n\n        // Write periodic status update so we can tell something is happening\n        if (myBlockNumber % maxThreads == 0 || myBlockNumber == stoppingBlock) {\n            var pctDone = getPercentComplete(myBlockNumber);\n            // console.log(`\\rScanning block ${myBlockNumber} - ${pctDone} %`);\n            onProgress(myBlockNumber,pctDone)\n        }\n\n        // Async call to getBlock() means we can run more than 1 thread\n        // at a time, which is MUCH faster for scanning.\n        web3.eth.getBlock(myBlockNumber, true, (error, block) => {\n            if (error) {\n                // Error retrieving this block\n                gotError = true;\n                console.error(\"Error:\", error);\n            } else {\n                scanBlockCallback(wallets,block,onFoundTx);\n                asyncScanNextBlock();\n            }\n        });\n    }\n    var nt;\n    for (nt = 0; nt < maxThreads && startingBlock + nt <= stoppingBlock; nt++) {\n        numThreads++;\n        asyncScanNextBlock();\n    }\n\n    return nt; // number of threads spawned (they'll continue processing)\n}\n","import {useEffect, useState } from \"react\"\nimport web3 from \"../utils/infura\";\nimport {scanBlockRange} from '../utils/scanner'\nimport { useLatest } from 'react-use';\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\nfunction useScanner (wallets:any){\n\n    const [scanning,setScanning] = useState<boolean>(false);\n\n    const [progress,setProgress] = useState<any>(0);\n    const [currentBlock,setCurrentBlock] = useState<Number>(0);\n    const [result,setResult] = useState<any>([]);\n    const latestResult = useLatest(result);\n    const latestCurrentBlock = useLatest(currentBlock);\n\n    function onFoundTx(tx){\n        const newResult = [tx,...latestResult.current]\n        const filterDuplicate = newResult.filter((v,i,a)=>a.findIndex(t=>(t.hash === v.hash))===i)\n        setResult(filterDuplicate)\n    }\n\n    useEffect(()=>{\n        function onFinish(e:any,stopBlock:any){\n            setScanning(false)\n            setCurrentBlock(stopBlock)\n        }\n    \n        function onProgress(currentBlock:any,progress:any){\n            if(progress){\n                setProgress(progress)\n            }\n            setCurrentBlock(currentBlock)\n        }\n\n        if(!scanning){\n            web3.eth.getBlockNumber()\n            .then(function(i){\n                sleep(3000).then(()=>{\n                    const currentBlock = latestCurrentBlock.current >0?latestCurrentBlock.current:i-7000\n                    setScanning(true)\n                    const optimizeWallets = wallets.map(e=>{\n                        return e.toLowerCase()\n                    })\n                    // console.log(optimizeWallets)\n                    scanBlockRange(optimizeWallets,currentBlock,i,onFoundTx,onProgress,onFinish)\n                })\n            });\n         \n        }\n    },[scanning])\n\n    return {\n        scanning,\n        progress,\n        currentBlock,\n        result,\n    }\n}\nexport default useScanner","import React, { useEffect, useState } from 'react';\nimport { Table, Tag, Space } from 'antd';\nimport web3 from \"../utils/infura\";\nfunction Swap(props:any) {\n    const {record} = props\n    return(\n        <Space size=\"middle\" >\n         <Tag color={\"red\"} >\n              <a key={record.hash}  href={\"https://etherscan.io/address/\"+record?.addressIn} target=\"_blank\" rel=\"noreferrer\" >{web3.utils.fromWei(record?.amountInValue ,record?.decimalsIn===18?'ether':'lovelace')+\" \"+record?.symbolIn}</a>\n        </Tag>\n        {'=>'}\n        <Tag color={\"blue\"} >\n            <a key={record.blockHash}  href={\"https://etherscan.io/address/\"+record?.addressOut} target=\"_blank\" rel=\"noreferrer\" >{web3.utils.fromWei(record?.amountOutValue ,record?.decimalsOut===18?'ether':'lovelace')+\" \"+record?.symbolOut}</a>\n        </Tag>\n        </Space>\n    )\n}\nfunction arePropsAreEqual(prevProps, nextProps) {\n    return prevProps.hash === prevProps.hash\n  }\n  \nconst MemoizedSwap = React.memo(Swap, arePropsAreEqual);\nexport default MemoizedSwap;","import React from 'react';\n\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport Swap from './Swap';\n\n\nclass TableData extends React.Component<any> {\n  state = {\n    searchText: '',\n    searchedColumn: '',\n  };\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value.toLowerCase()] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n          <Button\n            type=\"link\"\n            size=\"small\"\n            onClick={() => {\n              confirm({ closeDropdown: false });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex,\n              });\n            }}\n          >\n            Filter\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) =>{\n      if(record[dataIndex]){\n        if(Object.keys(record[dataIndex]).length>0){\n          return record?.symbolIn.toLowerCase().includes(value.toLowerCase()) ||record?.symbolOut.toLowerCase().includes(value.toLowerCase())\n        }\n        return record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n      }\n      return ''\n    },\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render:  (text, record)  =>{\n      if(this.state.searchedColumn === dataIndex ){\n        if(dataIndex==='inputDecode'){\n          return  <Swap record={record} key={record.hash}/>\n        }\n        return (\n          <a href={\"https://etherscan.io/address/\"+text} target=\"_blank\" rel=\"noreferrer\">\n          <Highlighter\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n            searchWords={[this.state.searchText]}\n            autoEscape\n            textToHighlight={text ? text.toString() : ''}\n          />\n          </a>\n        )\n      }else{\n        if(dataIndex==='inputDecode'){\n          return  <Swap record={record} key={record.hash}/>\n        }\n        return (\n          <Space size=\"middle\">\n          <a href={\"https://etherscan.io/address/\"+text} target=\"_blank\" rel=\"noreferrer\">{text}</a>\n        </Space>\n        )\n      }\n    },\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n    searchInput: Input;\n\n  render() {\n    const columns = [\n        {\n          title: 'Wallet',\n          dataIndex: 'from',\n          key: 'from',\n          render: (text, record) => (\n            <Space size=\"middle\">\n              <a href={\"https://etherscan.io/address/\"+record.from} target=\"_blank\" rel=\"noreferrer\">{record.from}</a>\n            </Space>\n          ),\n          ...this.getColumnSearchProps('from'),\n        },\n        {\n          title: 'Swap',\n          dataIndex: 'inputDecode',\n          key: 'inputDecode',\n          render: (text, record) => (\n            <Swap record={record} key={record.hash}/>\n          ),\n          ...this.getColumnSearchProps('inputDecode'),\n        },\n        {\n          title: 'Date',\n          dataIndex: 'timeStampString',\n          key: 'timeStampString',\n        },\n        {\n          title: 'Explore',\n          dataIndex: 'hash',\n          key: 'hash',\n          render: (text, record) => (\n            <Space size=\"middle\">\n              <a href={\"https://etherscan.io/tx/\"+record.hash} target=\"_blank\" rel=\"noreferrer\">Explore</a>\n            </Space>\n          ),\n        },\n      ];\n    return <Table columns={columns} dataSource={this.props.result} />;\n  }\n}\nexport default TableData","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Progress } from 'antd';\n\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport useScanner from './hooks/useScanner';\nimport TableData from './components/TableData';\nconst wallets = ['0xB3f323e8FB0B2534B0d9e205d4AFD2e7bC867301', '0x7cabb2af9f6e120e1207ec97992964e6b9777e7c', '0xaa9745160551e0cb567d6185b655ac319f80c2d9', '0x6932256b5239eda1a2a86dc07c72673bf5bdf4af', '0x97b9B29552317867368A9F0234DC768fb6a27fd9', '0xda90ddbbdd4e0237c6889367c1556179c817680b', '0xDcF7E0Bf73F96E60835E4c62Ad1A48d572d817F1', '0xDcABD5FcF046027855224FDBFe65fc05E16E06a7', '0xc309342Fa70f965f9f55323a0d5b921d4033165F', '0x419Fbce31fbCdf9bcb10d793d0d4c99DD58A8dA0', '0x7826EA5e012B511Bc5Bb89d70BA92Dcd07332351', '0x3dD48AD861F0B77D1312F9C95A13e52871Ca95e0', '0xf7f8e8461dd7d27a2b1c439372d171e38e6d71ae', '0x13a9548dda7807224fa3804afa5ede801be19b7a', '0x5de047371f414ea2acee5361c07e36dd6f2deadc', '0xabee5597eb23afde43f0b6654cd60ab8329556c7', '0x02b4714f3c2bf10ecc0cab8a497251b4c74092de', '0xf23fda58c7b927abae31a3c83809424f748c5b88', '0xd8f3041749beab4f66ecea7f9c5a68b4c15d6b5e', '0xba681f15a7bacb49ccf4a6577f2b522869db90d8', '0x338f3ec014d7edacb98506881d1e18dc00980fdc', '0x7263198c709a456cfdb9d968c9ec56dfb111e5b2', '0x21b1808b7018c70661fd5dee5594c40257244b84', '0x11d5736d22c734387b8d80428064770719207f68', '0xa28602f18eb877b0b929caaae94faed4ff402929', '0x928477dabc0ed2a6ce6c33966a52ea58cbdea212', '0xe99AbaEbE6Ed58A6b61C7eb3791D149de7791Fd5', '0xf9172446F3b6f0D027eF8F0A7fafA117FF5439c2', '0x9B680783331C991c770D9b44a38Ee3F9c74b6AdB', '0x0e63EE1a039bCC422b1bAaF65C7aE30C497d3FC8', '0xf4ACCDFA928bF863D097eCF4C4bB57ad77aa0cb2', '0x785bC2484a15dC9a8B644024FC142E8BCa1289Ae', '0x93f5af632Ce523286e033f0510E9b3C9710F4489', '0x9FFd9C00a3B581ae77dFB1dc16D020306ec9f36A', '0xf0B145a02139f91F998D093F2A12b9eCf2eF5405', '0x22fa8Cc33a42320385Cbd3690eD60a021891Cb32', '0x4EC7CdF61405758f5cED5E454c0B4b0F4F043DF0', '0xA14964479Ebf9cD336011ad80652b08CD83dFE3A', '0xad5395627309774916B08b721C228f18D9973530', '0xcb6e7bdfd5bba62bbdc487facc347637297cfda8', '0x28ed88c5f72c4e6dfc704f4cc71a4b7756bc4dbc', '0x4c46f9a3da4f7f2911e29dae334ebcf09101a669', '0x7a07de86eda9ae724a43bfaedc4da3cead9f8ffe', '0xa4d8e21f63e875c1b544d324908f5babd4d1960d', '0x4cd4066b468d583a1dabda5e516122799bc72706', '0x08c5ef8cb199f68d7f677dacbcd7522d11222eb', '0x461e76A4fE9f27605d4097A646837c32F1ccc31c', '0xc6E4Ad3ccdfC65687D2d60a454a8bdDc1F4d6c06'];\n\nfunction App() {\n  const {\n    result,\n    progress\n  } = useScanner(wallets)\n  return (\n    <div className=\"App\">\n    <Progress percent={50} status=\"active\" />\n    <TableData result={result}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}